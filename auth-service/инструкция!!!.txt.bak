
\


auth-service/
├── app/
│   ├── __init__.py         # Инициализация приложения
│   ├── auth_routes.py      # API для авторизации
│   ├── admin_routes.py     # Админ-панель
│   ├── mikrotik.py         # Интеграция с MikroTik
│   ├── sms_service.py      # Работа с SMS.RU
│   ├── models.py           # Модели базы данных
│   ├── templates/          # Шаблоны админки
│   └── static/             # Статические файлы
├── migrations/             # Миграции базы данных
├── config.py               # Конфигурация
├── requirements.txt        # Зависимости
└── run.py                  # Точка входа






templates/
├── admin/
│   ├── base.html
│   ├── dashboard.html
│   ├── login.html
│   ├── sessions.html
│   ├── users.html
│   └── user_detail.html
└── auth/
    ├── auth_form.html
    ├── code_verify.html
    └── sms_sent.html

static/
├── css/
│   ├── bootstrap.min.css
│   └── style.css
├── js/
│   ├── bootstrap.bundle.min.js
│   └── main.js
└── images/
    └── logo.png
















инструкция по развертыванию











Установите зависимости:

bash
pip install flask flask-sqlalchemy flask-login requests psycopg2-binary python-dotenv
Настройте базу данных PostgreSQL:

bash
sudo -u postgres psql
CREATE DATABASE auth_service;
CREATE USER auth_user WITH PASSWORD 'securepassword';
GRANT ALL PRIVILEGES ON DATABASE auth_service TO auth_user;
Создайте файл .env:

SECRET_KEY=your-very-secret-key
DATABASE_URL=postgresql://auth_user:securepassword@localhost/auth_service
SMSRU_API_ID=your-smsru-api-id
SMSRU_FROM=HotSpotAuth
ADMIN_USERNAME=admin
ADMIN_PASSWORD=securepassword
MIKROTIK_SECRET=shared-secret-for-hotspot
EXTERNAL_URL=https://your-vps-domain.com
Инициализируйте базу данных:

bash
flask initdb
Настройте MikroTik HotSpot:

/ip hotspot walled-garden ip
add action=accept comment="Auth Service" disabled=no dst-host=your-vps-domain.com

/ip hotspot profile
set [ find default=yes ] html-directory=hotspot login-by=http-chap,mac-cookie \
    http-cookie-lifetime=1d status-autorefresh=30s

/ip hotspot
add address-pool=hotspot disabled=no interface=wlan1 name=hotspot1 \
    profile=default
Запустите сервер:

bash
gunicorn -w 4 -b 0.0.0.0:5000 run:app
Особенности реализации
Интеграция с MikroTik HotSpot:

Поддержка серых IP через общий секретный ключ

Автоматическая авторизация MAC-адресов

Отслеживание активных сессий

Авторизация пользователей:

Подтверждение по SMS через sms.ru

Подтверждение по звонку (Call Password)

Временные коды с ограниченным сроком действия

Хранение данных:

Все сессии хранятся 1 год

Запись MAC-адресов, IP-адресов

Учет трафика (bytes_in/bytes_out)

Админ-панель:

Просмотр всех пользователей

Анализ сессий

Поиск по устройствам и сессиям

Статистика использования

Безопасность:

Хеширование паролей

Защищенные сессии

Валидация входных данных

Это решение обеспечит надежную авторизацию пользователей через MikroTik HotSpot с возможностью администрирования и подробным журналированием всех событий.

3. Как использовать
Скопируйте все файлы в соответствующие папки вашего проекта

Убедитесь, что все статические файлы (CSS, JS, изображения) доступны по правильным путям

Для админ-панели используются стандартные шаблоны Flask с наследованием от base.html

Формы авторизации находятся в папке templates/auth/ и используют минимальные стили Bootstrap

Все шаблоны адаптированы для работы с Flask и готовы к использованию в вашем проекте.

создай все статические файлы CSS, JS, изображения к этому проекту
Вот полный набор статических файлов для проекта, включая CSS, JavaScript и изображения:

1. Структура статических файлов
static/
├── css/
│   ├── bootstrap.min.css       # Bootstrap 5.2.3
│   └── style.css               # Кастомные стили
├── js/
│   ├── bootstrap.bundle.min.js  # Bootstrap JS с Popper
│   └── main.js                 # Основные скрипты
└── images/
    ├── logo.png                # Логотип сервиса
    └── favicon.ico             # Фавиконка